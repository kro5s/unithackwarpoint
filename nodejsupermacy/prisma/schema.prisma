// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int              @id @default(autoincrement())
  email          String           @unique
  phone          String           @unique
  name           String
  password       String
  TaskCompletion TaskCompletion[]
}

model Task {
  id             Int              @id @default(autoincrement())
  name           String
  starts         DateTime         @default(now())
  outdates       DateTime
  case           Case             @relation(fields: [caseId], references: [id])
  caseId         Int
  TaskCompletion TaskCompletion[]
}

model Card {
  id           Int            @id @default(autoincrement())
  name         String
  image        String
  CardsInCases CardsInCases[]
}

model Case {
  id           Int            @id @default(autoincrement())
  CardsInCases CardsInCases[]
  Task         Task[]
}

model CardsInCases {
  id     Int  @id @default(autoincrement())
  case   Case @relation(fields: [caseId], references: [id])
  caseId Int
  card   Card @relation(fields: [cardId], references: [id])
  cardId Int
}

model TaskCompletion {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  task   Task @relation(fields: [taskId], references: [id])
  userId Int
  taskId Int
}
